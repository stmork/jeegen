import jee7;

extension org::jeegen::jee7::generator::ext::types;

String asType(String s) :
	JAVA org.jeegen.jee7.generator.ext.ExtensionHelper.asType(java.lang.String);

String nameOf(Attribute t) :
	t.name.toFirstLower();

String parameterOf(Attribute t) :
	typeOf(t).toFirstLower();

String nameOf(Entity t) :
	t.name.toFirstLower();

String parameterOf(Entity t) :
	typeOf(t).toFirstLower();

String filename(Entity e) :
	fqTypeOf(e).replaceAll("\\.", "/") + ".java";

String abstractFilename(Entity e) :
	fqAbstractTypeOf(e).replaceAll("\\.", "/") + ".java";

String handlerFilename(Process p) :
	fqHandlerOf(p).replaceAll("\\.", "/") + ".java";

String abstractHandlerFilename(Process p) :
	fqAbstractHandlerOf(p).replaceAll("\\.", "/") + ".java";

String abstractHandlerFilename(Model m) :
	fqAbstractHandlerOf(m).replaceAll("\\.", "/") + ".java";

String daoFilename(Process p) :
	fqDaoOf(p).replaceAll("\\.", "/") + ".java";

String abstractDaoFilename(Process p) :
	fqAbstractDaoOf(p).replaceAll("\\.", "/") + ".java";

String daoFilename(Model m) :
	fqDaoOf(m).replaceAll("\\.", "/") + ".java";

String abstractDaoFilename(Model m) :
	fqAbstractDaoOf(m).replaceAll("\\.", "/") + ".java";

String applicationControllerFilename(Model m) :
	fqApplicationController(m).replaceAll("\\.", "/") + ".java";

String abstractApplicationControllerFilename(Model m) :
	fqAbstractApplicationController(m).replaceAll("\\.", "/") + ".java";

String sessionControllerFilename(Model m) :
	fqSessionController(m).replaceAll("\\.", "/") + ".java";

String producerFilename(Model m) :
	fqProducer(m).replaceAll("\\.", "/") + ".java";

String abstractProducerFilename(Model m) :
	fqAbstractProducer(m).replaceAll("\\.", "/") + ".java";
	
String getterOf(jee7::Boolean t) :
	"is" + nameOf(t).toFirstUpper();

String getterOf(Attribute t) :
	"get" + nameOf(t).toFirstUpper();

String setterOf(Attribute t) :
	"set" + nameOf(t).toFirstUpper();

String getterOf(Entity t) :
	"get" + nameOf(t).toFirstUpper();

String setterOf(Entity t) :
	"set" + nameOf(t).toFirstUpper();

String nameOf(Property prop) :
	asType(prop.jndi);

String getterOf(jee7::Property p) :
	"get" + nameOf(p).toFirstUpper();

String getterOf(jee7::BooleanProp p) :
	"is" + nameOf(p).toFirstUpper();

String localPartOf(Lob lob) :
	lob.name.toFirstLower() + "Part";

String partGetterOf(Entity e, Lob lob) :
	"get" + partNameOf(e, lob).toFirstUpper();

String partSetterOf(Entity e, Lob lob) :
	"set" + partNameOf(e, lob).toFirstUpper();
