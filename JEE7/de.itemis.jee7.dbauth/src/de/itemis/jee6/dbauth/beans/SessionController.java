
/*
 * Generated by Xtext/JEE6 Generator.
 * Copyright (C) 2013  itemis AG 
 * $Id$
 */

package de.itemis.jee6.dbauth.beans;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;

import de.itemis.jee7.dbauth.handler.AbstractHandler;
import de.itemis.jee7.util.LogUtil;

/**
 * This managed bean class handles some session tasks.
 */
@ManagedBean
@SessionScoped
public class SessionController extends AbstractHandler {
	private static final long serialVersionUID = 1L;

	/**
	 * This methods log out a logged in user.
	 * 
	 * @param request The {@link HttpServletRequest}.
	 * @return The outcome of the start page of this application.
	 * @throws ServletException
	 */
	public String logout(final HttpServletRequest request)
			throws ServletException {
		request.logout();
		getExternalContext().invalidateSession();

		return "/index.xhtml?faces-redirect=true";
	}

	/**
	 * This method returns true if somebody is logged in.
	 * 
	 * @return True if somebody is logged in.
	 */
	public boolean isLoggedIn() {
		return getExternalContext().getRemoteUser() != null;
	}

	/**
	 * This method returns the clear name of the logged in user. If nobody is
	 * logged in an appropriate message is returned.
	 *  
	 * @return The clear name of the logged in user.
	 * @throws NamingException
	 */
	public String getName() {
		final String login = getExternalContext().getRemoteUser();

		return login != null ? login : "<???>";
	}

	/**
	 * This method returns an caught exception.
	 *
	 * @return The caught exception.
	 */
	public Exception getException() {
		return (Exception) getExternalContext().getRequestMap().get(
				"javax.servlet.error.exception");
	}

	/**
	 * This method returns the exceptions error message. If this message is empty the class name is used
	 * as a key for obtaining the message from the error resource bundle.
	 *  
	 * @return The error message of the sessions exception.
	 */
	public String getExceptionMessage() {
		final Exception exception = getException();

		String message = exception.getMessage();
		if (LogUtil.isEmpty(message)) {
			message = getError(exception.getClass().getName());
		}
		return message;
	}
}
