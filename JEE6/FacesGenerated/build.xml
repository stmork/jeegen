<project name="JEE6-WebApp Example (Full generated app)" default="generate">
	<property file="${user.home}/.jee6.properties" />
	<property file="${basedir}/build.properties"/>

	<property name="war"                  value="example.war"/>
	<property name="bin-path"             value="./bin"/>
	<property name="src-path"             value="./src/main/java"/>
	<property name="res-path"             value="./src/main/resources"/>
	<property name="src-gen-path"         value="./src/generated/java"/>
	<property name="res-gen-path"         value="./src/generated/resources"/>
	<property name="lib-path"             value="${res-path}/WEB-INF/lib"/>
	<property name="img-path"             value="${res-path}/img"/>

	<property name="findbugs.home"        value="../FacesTest/findbugs"/>
	<property name="findbugs.exclude"     value="../FacesTest/findbugs-exclude.xml"/>
	<property name="findbugs.results"     value="./findbugs-results.xml"/>

	<property name="eclipse.home"         value="/opt/eclipse"/>
	<property name="eclipse.home.plugins" value="${eclipse.home}/plugins"/>
	
	<property name="jboss.home"           value="/opt/jboss-as-7.1.1.Final"/>
	<property name="jboss.lib"            value="${jboss.home}/modules"/>
	<property name="jboss.deploy"         value="${jboss.home}/standalone/deployments"/>

	<property name="glassfish.home"       value="/opt/glassfish3"/>
	<property name="glassfish.domain"     value="domain1"/>
	<property name="glassfish.deploy"     value="${glassfish.home}/glassfish/domains/${glassfish.domain}/autodeploy/"/>

	<!-- ==================================================== -->
	<!--              Setting up classpaths                   -->
	<!-- ==================================================== -->

	<path id="compile.path">
		<fileset dir="${jboss.lib}">
			<include name="**/*.jar"/>
			<exclude name="**/*jsf*1.2*.jar"/>
		</fileset>
		<fileset dir="${lib-path}"/>
	</path>

	<path id="generate.classpath">
		<fileset dir="${eclipse.home.plugins}">
			<include name="com.google.guava*.jar"/>
			<include name="com.google.inject*.jar"/>
			<include name="com.ibm.icu*.jar"/>
			<include name="de.itemis.*.jar"/>
			<include name="de.morknet.oaw.*.jar"/>
			<include name="org.antlr.runtime*.jar"/>
			<include name="org.apache.commons.cli*.jar"/>
			<include name="org.apache.commons.logging*.jar"/>
			<include name="org.apache.log4j*.jar"/>
			<include name="org.eclipse.emf.*.jar"/>
			<include name="org.eclipse.xpand*.jar"/>
			<include name="org.eclipse.xtend*.jar"/>
			<include name="org.eclipse.xtext*.jar"/>
			<include name="org.eclipse.text*.jar"/>
			<include name="org.eclipse.jdt*.jar"/>
			<include name="org.eclipse.equi*.jar"/>
			<include name="javax.inject*.jar"/>
			<include name="stringtemplate*.jar"/>

			<exclude name="**/*source*.jar"/>
			<exclude name="**/*src*.jar"/>
			<exclude name="**/*editor*.jar"/>
		</fileset>
		<pathelement path="${res-path}" />
		<pathelement path="${src-path}" />
	</path>
	
	<path id="findbugs.lib">
		<fileset dir="${findbugs.home}">
			<include name="**/*.jar"/>
		</fileset>  
	</path>

	<!-- ==================================================== -->
	<!--            Setting up target definitions             -->
	<!-- ==================================================== -->

	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.lib"/>

	<!-- ==================================================== -->
	<!--              Setting up build targets                -->
	<!-- ==================================================== -->

	<target name="clean">
		<delete file="${findbugs.results}"/>
		<delete file="${war}" />
		<delete dir="${bin-path}" />
	</target>

	<target name="clobber" depends="clean">
		<delete>
			<fileset dir="${src-path}">
			    <include name="**/*.properties"/>
				<include name="**/beans/**"/>
				<include name="**/dao/**"/>
				<include name="**/handler/**"/>
			</fileset>
			<fileset dir="${res-path}">
				<include name="**/*"/>
			</fileset>
		</delete>
	</target>

	<target name="generate">
		<echo message="Eclipse: ${eclipse.home}"/>
		<java classname="org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher" classpathref="generate.classpath" fork="true">
			<arg value="${src-path}/example.mwe2"/>
		</java>
	</target>

	<target name="compile">
		<mkdir dir="${bin-path}"/>
		<mkdir dir="${lib-path}"/>
		<copy file="../de.itemis.jee6.util/jee6-utils.jar" todir="${lib-path}"/>
		<copy todir="${img-path}">
			<fileset dir="../de.itemis.jee6.ui/resources">
				<include name="*.*"/>
			</fileset>
		</copy>
		<javac srcdir="${src-path}:${src-gen-path}" destdir="${bin-path}" debug="true" includeantruntime="false">
			<classpath refid="compile.path"/>
		</javac>
	</target>

	<target name="package" depends="compile">
		<jar destfile="${war}">
			<zipfileset dir="${bin-path}" prefix="WEB-INF/classes">
				<include name="**/*.class"/>
				<exclude name="**/*Test.class"/>
			</zipfileset>
			<zipfileset dir="${src-path}" prefix="WEB-INF/classes">
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
			</zipfileset>
			<zipfileset dir="${src-gen-path}" prefix="WEB-INF/classes">
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
			</zipfileset>
			<zipfileset dir="${res-path}"/>
			<zipfileset dir="${res-gen-path}"/>
		</jar>
	</target>
	
	<target name="deploy" depends="package">
		<copy file="${war}" todir="${jboss.deploy}" />
		<copy file="${war}" todir="${glassfish.deploy}" />
	</target>
	
	<target name="undeploy">
		<delete file="${jboss.deploy}/${war}" />
		<delete file="${glassfish.deploy}/${war}" />
	</target>
	
	<target name="round-trip" depends="clobber,generate,deploy"/>

	<!-- ==================================================== -->
	<!--              Setting up runtime targets              -->
	<!-- ==================================================== -->

	<target name="findbugs" depends="compile">
		<echo message="Checking ${ant.project.name}..."/>
		<findbugs jvmargs="-Xmx512m" home="${findbugs.home}"
				output="xml:withMessages"
				outputFile="${findbugs.results}"
				classpathref="compile.path"
				effort="max"
				excludeFilter="${findbugs.exclude}"
				reportlevel="low"
				failonerror="true">
			<sourcePath path="${src-path}"/>
			<class location="${bin-path}"/> 
			<auxclasspath refid="compile.path"/>
		</findbugs>
	</target>
</project>
