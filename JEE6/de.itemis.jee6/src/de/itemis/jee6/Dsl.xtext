grammar de.itemis.jee6.Dsl with org.eclipse.xtext.common.Terminals

generate jee6 "http://www.itemis.de/jee6/Dsl"

import 'http://www.eclipse.org/emf/2002/Ecore' as ecore

Model:	'application' name=STRING 'context' path=STRING 'package' package=PACKAGED_ID ('timeout' timeout=INT)? (state=ProjectState)? ';'
	(options   += Option)*
	(entities  += Entity)*
	(processes += Process)*;

enum ProjectState : Development='development'|Integration='integration'|Productive='productive';

Option:			(Persistence|Security|Mail|Locale|Param) ';';
Security:		{Security}('security' 'domain' jaas=STRING)?;
Persistence:	'persistence' 'unit' persistence=STRING 'jndi' jndi=STRING;
Mail:			'smtp' jndi=STRING;
Locale:			'locale' language=STRING (country=STRING)? (home?='default')?;
Param:			'param' name=PACKAGED_ID '=' value=STRING ('description' description=STRING)?;

/* Types */
Attribute:	(Simple|Reference) ';';

Simple:		(Date|Timestamp|Boolean|Integer|Number|Text|Blob|Clob) name=ID (transient?='transient')?;
Date:		{Date}'Date';
Timestamp:	{Timestamp}'Timestamp' (auto?='auto'|update?='update')?;
Boolean:	{Boolean}'Boolean';
Integer:	{Integer}'Int';
Number:		{Number}'Number';
Text:		{Text}'Text' (id?='id')?;
Blob:		{Blob}'Blob';
Clob:		{Clob}'Clob';

Reference:	(History|EntityRef|OptionRef);
History:	'History' type=[Entity|ID] name=ID;
EntityRef:	'Entity'  type=[Entity|ID] (many?='[]')? name=ID;
OptionRef:	'Option'  type=[Options|ID] name=ID;

/* Entities */
Entity:		(Table|Options) ';';

Table:		'entity'  name=ID (filterable?='filterable')? (cloneable?='cloneable')? '{' (types += Attribute)+ '}';
Options:	'options' name=ID (filterable?='filterable')? (cloneable?='cloneable')?
	('editable' '{' (types += Attribute)+ '}'| '{' keys+=STRING ( ',' keys += STRING)*  '}');

Process:	'process' name=ID ('roles' roles+=STRING (',' roles+=STRING)* )?
	'{'
		(properties += Property)*
		entities += [Entity|ID] (',' entities += [Entity|ID])*
	 '}' ';';

Property: (TextProp|IntegerProp|BooleanProp) jndi=STRING ('ref' original=STRING)? ';';

TextProp:		{TextProp}'Text' ('default' value=STRING)?;
IntegerProp:	{IntegerProp}'Integer' ('default' value=INT)?;
BooleanProp:	{BooleanProp}'Boolean' ('default' value=('true'|'false'))?;

PACKAGED_ID : ID ('.' ID)* ;
