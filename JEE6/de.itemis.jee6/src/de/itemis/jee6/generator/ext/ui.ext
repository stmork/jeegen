import jee6;

extension de::itemis::jee6::generator::ext::model;
extension de::itemis::jee6::generator::ext::types;

String index(Model m) :
	"index.xhtml";

String layout(Model m) :
	"layout.xhtml";

String login(Model m) :
	"login.xhtml";

String logout(Model m) :
	"logout.xhtml";

String menu(Model m) :
	"menu.xhtml";

String css(Model m) :
	"resources/css/display.css";

String navigation(Process p) :
	"NAV_" + p.name.toUpperCase();

String navigation(Process p, Entity e) :
	navigation(p) + "_" + e.name.toUpperCase();

String index(Process p) :
	prefixOf(p) + "/index.xhtml";

String index(Entity e) :
	prefixOf(e) + ".xhtml";

String index(Process p, Entity e) :
	prefixOf(p) + "/" + index(e); 

String sessionUri(Model m) :
	sessionController(m).toFirstLower();

Set[Entity] getHistoryEntities(Model m) :
	m.eAllContents.typeSelect(History).type;

Boolean isUi(Options o) :
	o.keys.size == 0;

Boolean isUi(Table t) :
	!getHistoryEntities(getModel(t)).contains(t);

Boolean isUi(Entity e) :
	true;

List[Entity] getUiEntities(Process p) :
	p.entities.select(e|isUi(e));

private List[Entity] getHistory(List[Attribute] a) :
	a.typeSelect(History).type;

cached Set[Entity] getManyEntites(List[Attribute] a) :
	a.typeSelect(EntityRef).select(e|isMany(e)).type;

Set[Entity] getEntitiesWithHistory(List[Entity] entities) :
	entities.union(getHistory(entities.types)).union(getManyEntites(entities.types)).sortBy(e|e.name);

private Boolean isListAttribute(Text t) :
	!t.transient;

private Boolean isListAttribute(Blob r) :
	false;

private Boolean isListAttribute(Clob r) :
	true;

private Boolean isListAttribute(OptionRef r) :
	true;

private Boolean isListAttribute(Reference r) :
	false;

private Boolean isListAttribute(Attribute a) :
	true;

private Boolean isMaskAttribute(Timestamp ts) :
	!(ts.auto || ts.update);

private Boolean isMaskAttribute(Attribute a) :
	isListAttribute(a);

Boolean isEMail(Text t) :
	t.name.toLowerCase().contains("mail");

List[Attribute] getMaskAttributes(Entity e) :
	e.types.select(e|isMaskAttribute(e));

List[Attribute] getListAttributes(Entity e) :
	e.types.select(e|isListAttribute(e));

List[Attribute] getMultipleAttributes(Entity e) :
	e.types.select(e|isMany(e));

String getClass(Text t) :
	"left";

String getClass(Reference r) :
	"left";

String getClass(jee6::Integer i) :
	"right";

String getClass(Number n) :
	"right";

String getClass(Boolean b) :
	"center";

String getClass(Attribute a) :
	"center";

String labelClass(Attribute a) :
	"mid";

String labelClass(Clob a) :
	"top";
