import jee6;

extension de::itemis::jee6::generator::ext::model;

/*
 * Type
 */

Boolean isMany(Type t) :
	false;

String typeOf(Type t) :
	"Object";

String packageOf(Type t) :
	"java.lang";

String fqTypeOf(Type t) :
	packageOf(t) + "." + typeOf(t);

String annotationOf(Type t) :
	"@Column";

/*
 * Date
 */
String typeOf(Date d) :
	"Date";

String packageOf(Date d) :
	"java.util";

String annotationOf(Date d) :
	"@Column @Temporal(TemporalType.Date)";
/*
 * Timestamp
 */
String typeOf(Timestamp ts) :
	"Date";

String packageOf(Timestamp ts) :
	"java.util";

String annotationOf(Timestamp ts) :
	"@Temporal(TemporalType.TIMESTAMP)";

/*
 * Integer
 */
String typeOf(jee6::Integer i) :
	"int";

String packageOf(jee6::Integer i) :
	"";

String fqTypeOf(jee6::Integer i) :
	typeOf(i);

/*
 * Number
 */
String typeOf(Number n) :
	"double";

String packageOf(Number n) :
	"";

String fqTypeOf(Number n) :
	typeOf(n);

/*
 * Text
 */
String typeOf(Text t) :
	"String";

String fqTypeOf(Text t) :
	typeOf(t);

/*
 * Blob
 */
String typeOf(Blob lob) :
	"byte []";

String fqTypeOf(Blob lob) :
	typeOf(lob);

String annotationOf(Blob lob) :
	"@Column @Lob";

/*
 * Clob
 */
String typeOf(Clob lob) :
	"String";

String fqTypeOf(Clob lob) :
	typeOf(lob);

String annotationOf(Clob lob) :
	"@Column @Lob";

/*
 * History reference
 */
Boolean isMany(History ref) :
	true;

String typeOf(History ref) :
	typeOf(ref.type);

String packageOf(History ref) :
	packageOf(ref.type);

String annotationOf(History ref) :
	"@OneToMany";

/*
 * Entity reference
 */
Boolean isMany(EntityRef ref) :
	ref.many;

String typeOf(EntityRef ref) :
	typeOf(ref.type);

String packageOf(EntityRef ref) :
	packageOf(ref.type);

String annotationOf(EntityRef ref) :
	ref.many ? "@OneToMany" : "@OneToOne";

/*
 * Options reference
 */
String typeOf(OptionRef ref) :
	typeOf(ref.type);

String packageOf(OptionRef ref) :
	packageOf(ref.type);

String annotationOf(OptionRef ref) :
	"@OneToOne";

/*
 * Entity
 */
String typeOf(Entity e) :
	e.name;

String packageOf(Entity e) :
	getModel(e).package + ".entity";

String fqTypeOf(Entity e) :
	packageOf(e) + "." + typeOf(e);

/*
 * List handling
 */
String relationOfType(Type t) :
	isMany(t) ? "List<" + typeOf(t) + ">" : typeOf(t);

Boolean hasList(Entity t) :
	false;

Boolean hasList(Table t) :
	t.types.exists(e|isMany(e));

List[String] packages(Entity t) :
	null;

private Boolean isNative(Type t) :
	(packageOf(t).length == 0) || packageOf(t).startsWith("java.lang");

List[String] packages(Table t) :
	t.types.reject(t|isNative(t)).fqTypeOf().toSet();
