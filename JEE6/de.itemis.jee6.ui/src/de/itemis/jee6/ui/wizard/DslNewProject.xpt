«IMPORT de::itemis::jee6::ui::wizard»

«EXTENSION de::itemis::jee6::ui::wizard::paths»

«DEFINE main FOR DslProjectInfo»
«EXPAND model FOR this»
«EXPAND workflow FOR this»
«EXPAND build FOR this»
«EXPAND readme FOR this»
«ENDDEFINE»

«DEFINE model FOR DslProjectInfo»
«FILE getModelPath() + "/" + projectName + ".jee6"-»
// Edit model here...
application "«projectName»"  context "/«applicationName»" package «basePackage».«applicationName.toFirstLower()» development;
persistence unit"«applicationName»DS" jndi "jdbc/«applicationName»DS";
locale "de" default;

entity UserInfo
{
	Text name;
	Date birth;
};

process User roles "users"
{
	UserInfo
};
«ENDFILE»
«ENDDEFINE»

«DEFINE workflow FOR DslProjectInfo»
«FILE getSrcPath() + "/" + getWorkflow()-»
module Generator

Workflow
{
	component = @de.itemis.jee6.generator.DslGeneratorMWE
	{
		modelpath="«getModelPath()»"
		impldir="«getSrcPath()»"
		srcdir="«getSrcGenPath()»"
		xhtmldir="«getResPath()»"
		resdir="«getResGenPath()»"
	}
}
«ENDFILE»
«ENDDEFINE»

«DEFINE build FOR DslProjectInfo»
«FILE "build.xml"»
<project name="«this.projectName»" default="package">
	<property file="${user.home}/.jee6.properties" />
	<property file="${basedir}/build.properties"/>

	<property name="bin-path"             value="./bin"/>
	<property name="src-path"             value="./«getSrcPath()»"/>
	<property name="src-gen-path"         value="./«getSrcGenPath()»"/>
	<property name="res-gen-path"         value="./«getResGenPath()»"/>
	<property name="web-path"             value="./«getResPath()»"/>

	<property name="war"                  value="«applicationName».war"/>

	<property name="eclipse.home"         value="/opt/eclipse"/>
	<property name="eclipse.home.plugins" value="${eclipse.home}/plugins"/>
	
	<property name="jboss.home"           value="/opt/jboss-as-7.1.1.Final"/>
	<property name="jboss.lib"            value="${jboss.home}/modules"/>
	<property name="jboss.deploy"         value="${jboss.home}/standalone/deployments"/>

	<property name="glassfish.home"       value="/opt/glassfish3"/>
	<property name="glassfish.deploy"     value="${glassfish.home}/glassfish/domains/domain1/autodeploy/"/>

	<!-- ==================================================== -->
	<!--              Setting up classpaths                   -->
	<!-- ==================================================== -->

	<path id="logger.path">
		<fileset dir="${web-path}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<path id="compile.path">
		<fileset dir="${jboss.lib}">
			<include name="**/*.jar"/>
			<exclude name="**/*jsf*1.2*.jar"/>
		</fileset>
		<path refid="logger.path"/>
	</path>

	<path id="generate.classpath">
		<fileset dir="${eclipse.home.plugins}">
			<include name="com.google.guava*.jar"/>
			<include name="com.google.inject*.jar"/>
			<include name="com.ibm.icu*.jar"/>
			<include name="de.itemis.*.jar"/>
			<include name="de.morknet.oaw.*.jar"/>
			<include name="org.antlr.runtime*.jar"/>
			<include name="org.apache.commons.cli*.jar"/>
			<include name="org.apache.commons.logging*.jar"/>
			<include name="org.apache.log4j*.jar"/>
			<include name="org.eclipse.emf.*.jar"/>
			<include name="org.eclipse.xpand*.jar"/>
			<include name="org.eclipse.xtend*.jar"/>
			<include name="org.eclipse.xtext*.jar"/>
			<include name="org.eclipse.text*.jar"/>
			<include name="org.eclipse.jdt*.jar"/>
			<include name="org.eclipse.equi*.jar"/>
			<include name="javax.inject*.jar"/>
			<include name="stringtemplate*.jar"/>

			<exclude name="**/*source*.jar"/>
			<exclude name="**/*src*.jar"/>
			<exclude name="**/*editor*.jar"/>
		</fileset>
		<pathelement path="${src-path}" />
	</path>
	
	<!-- ==================================================== -->
	<!--              Setting up build targets                -->
	<!-- ==================================================== -->

	<target name="clean">
		<delete file="${war}" />
		<delete dir="${bin-path}" />
	</target>

	<target name="generate">
		<echo message="${eclipse.home}"/>
		<java classname="org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher" classpathref="generate.classpath" fork="true">
			<arg value="${src-path}/«getWorkflow()»"/>
		</java>
	</target>

	<target name="compile">
		<mkdir dir="${bin-path}"/>
		<javac srcdir="${src-path}:${src-gen-path}" destdir="${bin-path}" debug="true" includeantruntime="false">
			<classpath refid="compile.path"/>
		</javac>
	</target>

	<target name="package" depends="compile">
		<jar destfile="${war}">
			<zipfileset dir="${bin-path}" prefix="WEB-INF/classes">
				<include name="**/*.class"/>
			</zipfileset>
			<zipfileset dir="${src-path}" prefix="WEB-INF/classes">
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
			</zipfileset>
			<zipfileset dir="${src-gen-path}" prefix="WEB-INF/classes">
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
			</zipfileset>
			<zipfileset dir="${web-path}"/>
			<zipfileset dir="${res-gen-path}"/>
		</jar>
	</target>
	
	<target name="deploy" depends="package">
		<copy file="${war}" todir="${jboss.deploy}" />
		<copy file="${war}" todir="${glassfish.deploy}" />
	</target>
	
	<target name="undeploy">
		<delete file="${jboss.deploy}/${war}" />
		<delete file="${glassfish.deploy}/${war}" />
	</target>
</project>
«ENDFILE»
«ENDDEFINE»

«DEFINE readme FOR DslProjectInfo»
«FILE "README.txt"»
Für das Kompilieren müssen folgende Bedingungen erfüllt sein:
1. Eine Runtime-Umgebung muss eingerichtet werden. Unter "Window -> Preferences -> Server ->
   Runtime Environment" kann eine eigerichtet werden. Im erzeugten Projekt muss das unter
   "Project -> Properties -> Java Build Path -> Library -> Add Library" hinzugefügt werden.
2. Es muss eine Data Source auf dem Application Server eingerichtet werden. Diese muss
   "jdbc/«applicationName»DS" benannt werden.
3. Es sollten die build.properties angepasst werden. Folgende Properties sollten gesetzt werden:
   a) jboss.home
   b) glassfish.home
   Je nach verwendetem Application Server können die Home-Variablen weggelassen werden, wenn in
   der build.xml die entsprechenden Tasks angepasst werden.
«ENDFILE»
«ENDDEFINE»
