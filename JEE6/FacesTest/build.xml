<project name="Faces Test" default="package">
	<property file="${user.home}/.jee6.properties" />
	<property file="${basedir}/build.properties"/>
	<property file="${basedir}/environment.properties"/>

	<property name="bin-path"     value="./bin"/>
	<property name="src-path"     value="./src"/>
	<property name="src-gen-path" value="./src-gen"/>
	<property name="res-gen-path" value="./res-gen"/>
	<property name="web-path"     value="./WebContent"/>
	<property name="tst-path"     value="./test"/>
	<property name="lib-path"     value="../de.itemis.jee6.util/lib"/>

	<property name="war"          value="facestest.war"/>
	<property name="module.jar"   value="ldapcontext.jar"/>
	<property name="module.xml"   value="module.xml"/>
	
	<property name="findbugs.home"     value="./findbugs"/>
	<property name="findbugs.results"  value="./findbugs-results.xml"/>

	<property name="eclipse.home"         value="/opt/eclipse"/>
	<property name="eclipse.home.plugins" value="${eclipse.home}/plugins"/>
	
	<property name="jboss.home"   value="/opt/jboss"/>
	<property name="jboss.lib"    value="${jboss.home}/modules"/>
	<property name="jboss.module" value="${jboss.lib}/de/itemis/jee6/ldap/main"/>
	<property name="jboss.deploy" value="${jboss.home}/standalone/deployments"/>

	<property name="glassfish.home"   value="/opt/glassfish3"/>
	<property name="glassfish.deploy" value="${glassfish.home}/glassfish/domains/domain1/autodeploy/"/>

	<property name="coverage-path" value="./coverage"/>	
	<property name="instr-path"    value="./instr"/>	
	<property name="emma.enabled"  value="true"/>

	<!-- ==================================================== -->
	<!--              Setting up classpaths                   -->
	<!-- ==================================================== -->

	<path id="logger.path">
		<fileset dir="${web-path}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<path id="compile.path">
		<fileset dir="${jboss.lib}">
			<include name="**/*.jar"/>
			<exclude name="**/*jsf*1.2*.jar"/>
		</fileset>
		<fileset dir="${lib-path}"/>
		<path refid="logger.path"/>
	</path>

	<path id="runtime.path">
		<path refid="compile.path"/>
	</path>

	<path id="findbugs.lib">
		<fileset dir="${findbugs.home}">
			<include name="**/*.jar"/>
		</fileset>  
	</path>

	<path id="emma.lib">
		<fileset dir="${lib-path}">
			<include name="**/emma*.jar"/>
		</fileset>
	</path>

	<path id="instr.classpath">
		<pathelement path="${bin-path}" />
	</path>

	<path id="emma.classpath">
		<pathelement location="${instr-path}" />  
		<pathelement location="${bin-path}" />  
		<path refid="runtime.path"/>
	</path>

	<path id="generate.classpath">
		<fileset dir="${eclipse.home.plugins}">
			<include name="com.google.guava*.jar"/>
			<include name="com.google.inject*.jar"/>
			<include name="com.ibm.icu*.jar"/>
			<include name="de.itemis.*.jar"/>
			<include name="de.morknet.oaw.*.jar"/>
			<include name="org.antlr.runtime*.jar"/>
			<include name="org.apache.commons.cli*.jar"/>
			<include name="org.apache.commons.logging*.jar"/>
			<include name="org.apache.log4j*.jar"/>
			<include name="org.eclipse.emf.*.jar"/>
			<include name="org.eclipse.xpand*.jar"/>
			<include name="org.eclipse.xtend*.jar"/>
			<include name="org.eclipse.xtext*.jar"/>
			<include name="org.eclipse.text*.jar"/>
			<include name="org.eclipse.jdt*.jar"/>
			<include name="org.eclipse.equi*.jar"/>
			<include name="javax.inject*.jar"/>
			<include name="stringtemplate*.jar"/>

			<exclude name="**/*source*.jar"/>
			<exclude name="**/*src*.jar"/>
			<exclude name="**/*editor*.jar"/>
		</fileset>
		<pathelement path="${src-path}" />
	</path>
	
	<!-- ==================================================== -->
	<!--            Setting up target definitions             -->
	<!-- ==================================================== -->

	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="findbugs.lib"/>
	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpathref="runtime.path"/>
	<taskdef resource="emma_ant.properties" classpathref="runtime.path" />

	<!-- ==================================================== -->
	<!--              Setting up build targets                -->
	<!-- ==================================================== -->

	<target name="clean">
		<delete file="${findbugs.results}"/>
		<delete file="${war}" />
		<delete dir="${bin-path}" />
		<delete dir="${instr-path}" />
		<delete dir="${coverage-path}" />
		<delete>
			<fileset dir="." includes="TEST-*.xml"/>
			<fileset dir="." includes="TEST-*.txt"/>
			<fileset dir="." includes="coverage.*"/>
			<fileset dir="." includes="*.emma"/>
		</delete>
	</target>

	<target name="generate">
		<echo message="${eclipse.home}"/>
		<java classname="org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher" classpathref="generate.classpath" fork="true">
			<arg value="${src-path}/FacesTest.mwe2"/>
		</java>
	</target>

	<target name="compile">
		<mkdir dir="${bin-path}"/>
		<javac srcdir="${src-path}:${src-gen-path}:${tst-path}" destdir="${bin-path}" debug="true" includeantruntime="false">
			<classpath refid="compile.path"/>
		</javac>
	</target>

	<target name="package" depends="compile">
		<jar destfile="${war}">
			<zipfileset dir="${bin-path}" prefix="WEB-INF/classes">
				<include name="**/*.class"/>
				<exclude name="**/*Test.class"/>
			</zipfileset>
			<zipfileset dir="${src-path}" prefix="WEB-INF/classes">
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
			</zipfileset>
			<zipfileset dir="${src-gen-path}" prefix="WEB-INF/classes">
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
			</zipfileset>
			<zipfileset dir="${web-path}"/>
			<zipfileset dir="${res-gen-path}"/>
		</jar>
		<jar destfile="${module.jar}">
			<zipfileset dir="${bin-path}">
				<include name="**/LdapFactory.class"/>
			</zipfileset>
		</jar>
	</target>
	
	<target name="deploy" depends="package">
		<copy file="${module.jar}" todir="${jboss.module}"/>
		<copy file="${module.xml}" todir="${jboss.module}"/>
		<copy file="${war}" todir="${jboss.deploy}" />
		<copy file="${war}" todir="${glassfish.deploy}" />
	</target>
	
	<target name="undeploy">
		<delete file="${jboss.deploy}/${war}" />
		<delete file="${glassfish.deploy}/${war}" />
	</target>

	<!-- ==================================================== -->
	<!--              Setting up runtime targets              -->
	<!-- ==================================================== -->

	<target name="instr" depends="compile" if="emma.enabled">
		<mkdir dir="${instr-path}"/>
		<emma>
			<instr instrpathref="instr.classpath" destdir="${instr-path}" metadatafile="metadata.emma" merge="true">
				<filter excludes="org.*,com.*,edu.*,junit.*,gnu.io.*,java*"/>
				<filter excludes="de.itemis.jee6.util.Profiler*"/>
			</instr>
		</emma>
	</target>

	<target name="test" depends="compile">
		<taskdef resource="emma_ant.properties" classpathref="emma.lib" />
		<junit printsummary="on" fork="on" haltonerror="yes" haltonfailure="yes">
			<classpath refid="emma.classpath" />
			<formatter type="xml"/>
			<jvmarg value="-Demma.coverage.out.file=coverage.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />
			<test name="de.itemis.faces.test.EntityTest"/>
		</junit>
	</target>

	<target name="emma" depends="instr,test">
		<taskdef resource="emma_ant.properties" classpathref="emma.lib" />
		<emma>
			<report sourcepath="${src-path}:${tst-path}:${main-project}/${src-path}:${main-project}/${src-gen-path}">
				<fileset dir=".">
					<include name="*.emma"/>
				</fileset>  
				<txt  outfile="coverage.txt" />
				<xml  outfile="coverage.xml" />
				<html outfile="coverage.html" />
			</report>  
		</emma>
	</target>  

	<target name="findbugs" depends="compile">
		<echo message="Checking ${ant.project.name}..."/>
		<findbugs jvmargs="-Xmx512m" home="${findbugs.home}"
				output="xml:withMessages"
				outputFile="${findbugs.results}"
				classpathref="compile.path"
				effort="max"
				excludeFilter="findbugs-exclude.xml"
				reportlevel="low"
				failonerror="true">
			<sourcePath path="${main-project}/${src-path}"/>
			<class location="${bin-path}"/> 
			<auxclasspath refid="compile.path"/>
		</findbugs>
	</target>
</project>
