
/*
 * Generated by Xtext/JEE6 Generator.
 * Copyright (C) 2013  itemis AG 
 * $Id$
 */

package de.itemis.jee6.dbauth.handler;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;

import java.util.List;

import de.itemis.jee6.dbauth.entities.AuthInfo;

/**
 * This managed bean class implements the action handlings for the following entity beans:
 * <ul>

 * <li>{@link AuthInfo}</li>

 * </ul>
 */
@ManagedBean
@SessionScoped
public class UserHandler extends AbstractUserHandler {
	private static final long serialVersionUID = 1L;

	private static final String NAV_USER_AUTHINFO = "authinfo.xhtml";

	/*********************************************
	 * AuthInfo authInfo
	 *********************************************/

	/**
	 * This method returns a {@link List} of all {@link AuthInfo} beans.
	 *
	 * @return {@link List} of all {@link AuthInfo} beans.
	 * @see de.itemis.jee6.dbauth.dao.AbstractUserDaoBean#getAuthInfoList()
	 */

	@Override
	public List<AuthInfo> getAuthInfoList() {
		final List<AuthInfo> list = dao.getAuthInfoList();

		return list;
	}

	/**
	 * This method adds a new {@link AuthInfo} bean.
	 *
	 * @param authInfo The new {@link AuthInfo} bean to persist.
	 * @return The outcome where to go on success.
	 * @see de.itemis.jee6.dbauth.dao.AbstractUserDaoBean#addAuthInfo(AuthInfo)
	 */

	@Override
	public String addAuthInfo(final AuthInfo authInfo) {
		dao.addAuthInfo(authInfo);
		setAuthInfo(new AuthInfo());
		return NAV_USER_AUTHINFO;
	}

	/**
	 * This method sets the given {@link AuthInfo} bean for editing.
	 *
	 * @param authInfo The {@link AuthInfo} bean to edit.
	 * @return The outcome where to go on success.
	 */

	@Override
	public String changeAuthInfo(final AuthInfo authInfo) {
		setAuthInfo(authInfo);
		return NAV_USER_AUTHINFO;
	}

	/**
	 * This method removes the given {@link AuthInfo} bean.
	 *
	 * @param authInfo The {@link AuthInfo} bean to remove.
	 * @return The outcome where to go on success.
	 * @see de.itemis.jee6.dbauth.dao.AbstractUserDaoBean#deleteAuthInfo(AuthInfo)
	 */

	@Override
	public String removeAuthInfo(final AuthInfo authInfo) {
		if (isAuthInfoEmpty(authInfo)) {
			dao.deleteAuthInfo(authInfo);
		} else {
			error(null, "user.authinfo.not-empty");
		}
		return NAV_USER_AUTHINFO;
	}

	/**
	 * This method sets the given {@link AuthInfo} bean for editing.
	 *
	 * @return The outcome where to go on success.
	 * @see de.itemis.jee6.dbauth.dao.AbstractUserDaoBean#updateAuthInfo(AuthInfo)
	 */

	@Override
	public String saveAuthInfo() {
		dao.updateAuthInfo(getAuthInfo());
		setAuthInfo(new AuthInfo());
		return NAV_USER_AUTHINFO;
	}

	/**
	 * This method simply returns an outcome to return to the processes main menu.
	 *
	 * @return The outcome to go to the main menu.
	 */

	@Override
	public String backFromAuthInfo() {
		return NAV_INDEX;
	}

	/**
	 * This method changes the active flag of the given {@link AuthInfo} bean.
	 *
	 * @param authInfo The {@link AuthInfo} bean to change the active flag.
	 * @return The outcome where to go on success.
	 * @see de.itemis.jee6.dbauth.dao.AbstractUserDaoBean#activate(AuthInfo,boolean)
	 */

	@Override
	public String reactivateAuthInfo(final AuthInfo authInfo) {
		dao.activate(authInfo, !authInfo.isActive());
		return NAV_USER_AUTHINFO;
	}

}
